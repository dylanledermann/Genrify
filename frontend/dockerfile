#############################################################################
# Default build config: set working directory and node version
FROM node:22-slim AS base
USER node
WORKDIR /usr/src/app

#############################################################################
# Create stage for downloading dependencies
FROM base AS deps

# Download dependencies as a separate step to take advantage of docker's caching
# Leverage a cache mount to speed up subsequent builds
# Leverage bind mount to avoid having to copy them into this layer
RUN --mount=type=bind, source=package.json, target=package.json \
    --mount=type=bind, source=package-lock.json, target=package-lock.json \
    npm ci --omit=dev

#############################################################################
# Create stage for building the app
FROM deps AS build

# Copy source files into the image
COPY . .

# Run the build script
RUN npm run build

#############################################################################
# Create new stage to run the app with minimal runtime deps
FROM base AS final

# Set production node env
ENV NODE_ENV = production

# Run the app as a non-root user
USER node

# Copy package.json and package-lock.json for package manager commands
COPY package.json .
COPY package-lock.json .

# Expose app port
EXPOSE 3000

# Run the app
CMD ['npm', 'start']